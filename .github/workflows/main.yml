name: cd

on:
  push:
    branches:
      - final

env:
  NEXT_PUBLIC_API_URL: https://apidev.klinikmajja.com
  NEXT_PUBLIC_AWSENDPOINT: https://paymentdev.klinikmajja.com
  NEXT_PUBLIC_DATABASE_HOST: 127.0.0.1
  NEXT_PUBLIC_DATABASE_PORT: 5522
  NEXT_PUBLIC_MYSQL_DATABASE: user_db_dev
  NEXT_PUBLIC_MYSQL_USER: user_dev
  NEXT_PUBLIC_MYSQL_PASSWORD: Majj@clinic2023
  SSH_HOST: 203.161.53.80
  SSH_USERNAME: root
  SSH_PASSWORD: Majj@clinic2023

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create .env file
        run: |
          echo NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }} >> .env
          echo NEXT_PUBLIC_AWSENDPOINT=${{ env.NEXT_PUBLIC_AWSENDPOINT }} >> .env
          echo NEXT_PUBLIC_DATABASE_HOST=${{ env.NEXT_PUBLIC_DATABASE_HOST }} >> .env
          echo NEXT_PUBLIC_DATABASE_PORT=${{ env.NEXT_PUBLIC_DATABASE_PORT }} >> .env
          echo NEXT_PUBLIC_MYSQL_DATABASE=${{ env.NEXT_PUBLIC_MYSQL_DATABASE }} >> .env
          echo NEXT_PUBLIC_MYSQL_USER=${{ env.NEXT_PUBLIC_MYSQL_USER }} >> .env
          echo NEXT_PUBLIC_MYSQL_PASSWORD=${{ env.NEXT_PUBLIC_MYSQL_PASSWORD }} >> .env
          # Tambahkan variabel lain sesuai kebutuhan Anda

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: naufalikhsan85
          password: Qsampai5lima5lima

      - name: Build Docker image
        run: docker build -t frontend_hub_dev .

      - name: Tag Docker image
        run: docker tag frontend_hub_dev docker.io/naufalikhsan85/frontend_hub_dev:latest

      - name: Push Docker image
        run: docker push docker.io/naufalikhsan85/frontend_hub_dev:latest

      - name: SSH to server and pull the latest image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          password: ${{ env.SSH_PASSWORD }}
          port: 22
          script: |
            sudo docker rm frontend_hub_dev_container -f
            sudo docker rmi naufalikhsan85/frontend_hub_dev:latest

            sudo docker pull docker.io/naufalikhsan85/frontend_hub_dev:latest

            sudo docker run --name frontend_hub_dev_container \
            --restart always \
            --network containers_lan \
            -p 3000:3000 \
            -e NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }} \
            -e NEXT_PUBLIC_AWSENDPOINT=${{ env.NEXT_PUBLIC_AWSENDPOINT }} \
            -e NEXT_PUBLIC_DATABASE_HOST=${{ env.NEXT_PUBLIC_DATABASE_HOST }} \
            -e NEXT_PUBLIC_DATABASE_PORT=${{ env.NEXT_PUBLIC_DATABASE_PORT }} \
            -e NEXT_PUBLIC_MYSQL_DATABASE=${{ env.NEXT_PUBLIC_MYSQL_DATABASE }} \
            -e NEXT_PUBLIC_MYSQL_USER=${{ env.NEXT_PUBLIC_MYSQL_USER }} \
            -e NEXT_PUBLIC_MYSQL_PASSWORD=${{ env.NEXT_PUBLIC_MYSQL_PASSWORD }} \
            -e SSH_PASSWORD=${{ env.SSH_PASSWORD }} -e SSH_USER=${{ env.SSH_USERNAME }} -e SSH_HOST=${{ env.SSH_HOST }} \
            -d naufalikhsan85/frontend_hub_dev

            sudo docker builder prune -f
